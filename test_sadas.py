# Generated by Selenium IDE
import email
from lib2to3.pgen2 import token
import random
import re
import time
from services.scaffold import Scaffold
import json
from selenium.webdriver.common.keys import Keys
from urllib import response
from services.scaffold import Scaffold
from selenium import webdriver
import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver import ActionChains
import faker
import os
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
class TestSadas():
  def __init__(self,thread):
    self.user = ''
    self.email = ''
    self.password = "A7med24368"
    self.ready = False
    self.error = False
    options = uc.ChromeOptions()
    # if Proxies:
    #     proxy = random.choice(Proxy_list)
    #     # proxy = self.Proxy_list.iloc[self.proxy_counter].values[0]
    #     # proxy = ser.iloc[self.proxy_counter].values[0]
    #     print(proxy)
    #     options.add_argument('--proxy-server=http://%s' % proxy)
    options.add_argument('--disable-dev-shm-usage')
    options.headless = False
    options.add_argument("--incognito")
    # options.add_argument("--disable-gpu")
    # options.add_argument(r'--load-extension="C:\Users\Ahmed\Desktop\hcaptcha-challenger-main\src\plugin.zip"')
    options.add_argument("--log-level=3")
    options.add_argument(fr"--user-data-dir=C:\Users\Ahmed\Desktop\proton-twitter\ChromeProfiles\profile{thread}") #e.g. C:\Users\You\AppData\Local\Google\Chrome\User Data
    options.add_argument(r'--profile-directory=YourProfileDir') #e.g. Profile 3
    options.add_argument('--disable-blink-features=AutomationControlled')
    options.add_argument('--no-first-run --no-service-autorun --password-store=basic')
    caps = DesiredCapabilities().CHROME
    caps["pageLoadStrategy"] = "eager"
    self.driver = uc.Chrome(options=options,desired_capabilities=caps)

  def solve(self):
    os.system(r"C:\Users\Ahmed\Desktop\hcaptcha-challenger-main\src\main.py")
  
  def teardown_method(self, method):
    self.driver.quit()

  def login(self,new,email):
    if new:
       self.driver.implicitly_wait(5) 
       self.driver.get("https://account.proton.me/login")
       self.user = email
    self.driver.find_element(By.ID, "username").send_keys(self.user)
    self.driver.find_element(By.ID, "password").send_keys(self.password)
    self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div[1]/div/main/div[2]/form/button').click()
    time.sleep(1)
    token = Scaffold.demo(silence=False, target='proton')
    self.driver.execute_script(f"document.getElementById('anycaptchaSolveButton').onclick('{token}');")
    time.sleep(5)
    try:
      self.driver.find_element(By.XPATH, '/html/body/div[4]/dialog/div/div/div[3]/div/div/footer/button').click()
      self.driver.find_element(By.XPATH, '/html/body/div[4]/dialog/div/div/div[3]/div/div/footer/button[2]').click()
      self.driver.find_element(By.XPATH, '/html/body/div[4]/dialog/div/div/div[3]/div/div/footer/button[2]').click()
    except:
      pass
  def get_code2(self):
    return self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div/div[2]/div/div[2]/div/main/div/div[1]/div/div[2]/div/div[2]/div[1]/span').text.split(' ')[0]

  def test_sadas(self):
    try:
      self.driver.implicitly_wait(5) 
      self.driver.get("https://account.proton.me/signup?plan=free&billing=12&currency=EUR&language=en")
      self.driver.set_window_size(974, 1032)
      # 3 | selectFrame | index=0 | 
      time.sleep(1)
      self.driver.switch_to.frame(0)
      # 4 | type | id=email | xzcacaczxcdacafadfadd
      time.sleep(1)

      self.user = faker.Faker().word() + faker.Faker().word() + str(random.choice(range(1500)))
      self.email = self.user + '@proton.me'
      self.driver.find_element(By.ID, "email").send_keys(self.user)
      n = 0
      time.sleep(1)
      self.driver.switch_to.default_content()
      self.driver.find_element(By.ID, "password").send_keys("A7med24368")
      # 13 | click | css=.sign-layout-container > div | 
      # 14 | type | id=repeat-password | A7med24368
      self.driver.find_element(By.ID, "repeat-password").send_keys("A7med24368")
      # 15 | sendKeys | id=repeat-password | ${KEY_ENTER}
      self.driver.find_element(By.ID, "repeat-password").send_keys(Keys.ENTER)
      if  'Email' in self.driver.find_element(By.ID, "label_0").text:
        self.error = True
        self.driver.quit()
        return False
      token = Scaffold.demo(silence=False, target='proton')
      frame = self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div/div/main/div[2]/div/div[2]/iframe')
      self.driver.switch_to.frame(frame)
      # self.driver.execute_script(f'document.getElementsByName("g-recaptcha-response")[0].innerHTML="{token}";')
      # self.driver.execute_script(f'document.getElementsByName("h-captcha-response")[0].innerHTML="{token}";')
      self.driver.execute_script(f"document.getElementById('anycaptchaSolveButton').onclick('{token}');")
      self.driver.switch_to.default_content()
      print('account has been created')
      time.sleep(10)
      self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div/div/main/div[2]/form/button').click()
      self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div/div/main/div[2]/form/button[2]').click()
      self.driver.find_element(By.XPATH, '/html/body/div[4]/dialog/div/div[3]/button[1]').click()
      self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div/div/main/div[2]/ul/li[1]/button').click()
      time.sleep(6)
      self.driver.find_element(By.XPATH, '/html/body/div[4]/dialog/div/div/div[3]/div/div/footer/button').click()
      self.driver.find_element(By.XPATH, '/html/body/div[4]/dialog/div/div/div[3]/div/div/footer/button[2]').click()
      self.driver.find_element(By.XPATH, '/html/body/div[4]/dialog/div/div/div[3]/div/div/footer/button[2]').click()
      self.ready = True
      return self.email
    except Exception as e:
      self.driver.quit()
      self.error = True
      return False
  
  def get_code(self):
    time.sleep(2)
    try:
      try:
        self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div/div[2]/div/div[1]/div[4]/nav/div/ul/li[1]/a').click()
      except:
        pass
      time.sleep(2)
      code = self.get_code2()
      print(code)
      self.driver.quit()
      return code
    except:
      try:
        self.login(new=False, email='ws')
        time.sleep(5)
        code = self.get_code2()
        print(code)
        self.driver.quit()
        return code
      except:
        self.driver.quit()
        return False
